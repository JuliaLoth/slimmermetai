# .github/workflows/deploy.yml
name: Deploy SlimmerMetAI to Antagonist

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.1'
        extensions: mbstring, xml, curl, gd, pdo_mysql
        coverage: none

    - name: Install Dependencies
      run: composer install --prefer-dist --no-progress --no-dev --optimize-autoloader

    # --- Debug SSH Configuration ---
    - name: Debug SSH Configuration
      run: |
        echo "üîç Debugging SSH Configuration..."
        echo "Host: 31.184.80.250"
        echo "Port: 22"
        echo "User: ${{ secrets.SSH_USER }}"
        echo "Production Path: /home/deb133403n2/domains/slimmermetai.com"
        echo "Timestamp: $(date)"
        echo "GitHub Runner IP: $(curl -s https://ifconfig.me || echo 'Unable to detect')"
        
        # Validate required secrets
        if [ -z "${{ secrets.SSH_USER }}" ] || [ -z "${{ secrets.SSH_PRIVATE_KEY }}" ]; then
          echo "‚ùå One or more required secrets are missing"
          exit 1
        fi
        
        echo "‚úÖ All required secrets are configured"

    # --- Test Network Connectivity ---
    - name: Test Network Connectivity
      run: |
        echo "üåê Testing network connectivity to server..."
        
        # Test ping (if ICMP is allowed)
        ping -c 3 31.184.80.250 || echo "‚ùå Ping failed (ICMP may be blocked)"
        
        # Test port connectivity
        timeout 10 bash -c '</dev/tcp/31.184.80.250/22' && echo "‚úÖ Port 22 is reachable" || echo "‚ùå Port 22 is not reachable"

    # --- Test SSH Connection ---
    - name: Test SSH Connection
      run: |
        echo "üîë Testing SSH Connection..."
        
        # Setup SSH with secure permissions
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/deploy_key
        chmod 600 ~/.ssh/deploy_key
        chmod 700 ~/.ssh
        
        # Add SSH config for better debugging
        cat > ~/.ssh/config << EOF
        Host deploy-server
          HostName 31.184.80.250
          Port 22
          User ${{ secrets.SSH_USER }}
          IdentityFile ~/.ssh/deploy_key
          StrictHostKeyChecking no
          ConnectTimeout 30
          ServerAliveInterval 60
          ServerAliveCountMax 3
          LogLevel VERBOSE
        EOF
        
        # Test connection with increased timeout and verbose logging
        echo "Testing SSH connection with extended timeout..."
        ssh -o StrictHostKeyChecking=no \
            -o ConnectTimeout=30 \
            -o ServerAliveInterval=60 \
            -o ServerAliveCountMax=3 \
            -o LogLevel=VERBOSE \
            -p 22 \
            -i ~/.ssh/deploy_key \
            ${{ secrets.SSH_USER }}@31.184.80.250 \
            "echo 'üîí SSH connection successful!' && echo 'Server time: $(date)' && ls -la /home/deb133403n2/domains/slimmermetai.com"

    # --- Deploy to Production ---
    - name: Deploy to Production
      uses: burnett01/rsync-deployments@7.0.1
      with:
        switches: -avzr --delete --exclude='.env*' --exclude='.git*' --exclude='node_modules' --exclude='storage/logs/*' --exclude='.ssh' --timeout=60
        path: ./
        remote_path: /home/deb133403n2/domains/slimmermetai.com/
        remote_host: 31.184.80.250
        remote_user: ${{ secrets.SSH_USER }}
        remote_key: ${{ secrets.SSH_PRIVATE_KEY }}
        remote_port: 22

    - name: Post-Deployment Tasks
      run: |
        echo "üìù Running post-deployment tasks..."
        
        # Execute post-deployment commands with extended timeout
        ssh -o StrictHostKeyChecking=no \
            -o ConnectTimeout=30 \
            -o ServerAliveInterval=60 \
            -o ServerAliveCountMax=3 \
            -p 22 \
            -i ~/.ssh/deploy_key \
            ${{ secrets.SSH_USER }}@31.184.80.250 \
            "cd /home/deb133403n2/domains/slimmermetai.com && \
             echo 'üìÇ Current directory: $(pwd)' && \
             echo 'üìã Directory contents:' && ls -la && \
             echo '‚öôÔ∏è  Setting up environment...' && \
             cp .env.production .env 2>/dev/null || echo 'Warning: .env.production not found' && \
             echo 'üîí Setting permissions...' && \
             chmod -R 755 . && \
             find . -type f -exec chmod 644 {} \; && \
             chmod -R 775 storage 2>/dev/null || echo 'Warning: storage directory not found' && \
             chmod -R 775 public/uploads 2>/dev/null || echo 'Warning: public/uploads directory not found' && \
             echo '‚úÖ Post-deployment tasks completed successfully'" 