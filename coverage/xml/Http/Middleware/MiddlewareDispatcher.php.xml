<?xml version="1.0"?>
<phpunit xmlns="https://schema.phpunit.de/coverage/1.0">
  <file name="MiddlewareDispatcher.php" path="\Http\Middleware">
    <totals>
      <lines total="41" comments="11" code="30" executable="6" executed="6" percent="100.00"/>
      <methods count="2" tested="2" percent="100.00"/>
      <functions count="0" tested="0" percent="0"/>
      <classes count="1" tested="1" percent="100.00"/>
      <traits count="0" tested="0" percent="0"/>
    </totals>
    <class name="App\Http\Middleware\MiddlewareDispatcher" start="17" executable="6" executed="6" crap="3">
      <namespace name="App\Http\Middleware"/>
      <method name="__construct" signature="__construct(array $stack, Psr\Http\Server\RequestHandlerInterface $finalHandler)" start="26" end="30" crap="1" executable="2" executed="2" coverage="100"/>
      <method name="handle" signature="handle(Psr\Http\Message\ServerRequestInterface $request): Psr\Http\Message\ResponseInterface" start="32" end="39" crap="2" executable="4" executed="4" coverage="100"/>
    </class>
    <coverage>
      <line nr="28">
        <covered by="Tests\Integration\MiddlewareStackIntegrationTest::testMiddlewareStackWithExceptionHandling"/>
        <covered by="Tests\Integration\MiddlewareStackIntegrationTest::testRateLimitingInMiddlewareStack"/>
        <covered by="Tests\Integration\MiddlewareStackIntegrationTest::testJsonBodyParsingInStack"/>
        <covered by="Tests\Integration\MiddlewareStackIntegrationTest::testInvalidJsonHandlingInStack"/>
        <covered by="Tests\Integration\MiddlewareStackIntegrationTest::testMiddlewareOrderMatters"/>
        <covered by="Tests\Integration\MiddlewareStackIntegrationTest::testEmptyMiddlewareStack"/>
        <covered by="Tests\Integration\MiddlewareStackIntegrationTest::testFinalHandlerUsage"/>
      </line>
      <line nr="29">
        <covered by="Tests\Integration\MiddlewareStackIntegrationTest::testMiddlewareStackWithExceptionHandling"/>
        <covered by="Tests\Integration\MiddlewareStackIntegrationTest::testRateLimitingInMiddlewareStack"/>
        <covered by="Tests\Integration\MiddlewareStackIntegrationTest::testJsonBodyParsingInStack"/>
        <covered by="Tests\Integration\MiddlewareStackIntegrationTest::testInvalidJsonHandlingInStack"/>
        <covered by="Tests\Integration\MiddlewareStackIntegrationTest::testMiddlewareOrderMatters"/>
        <covered by="Tests\Integration\MiddlewareStackIntegrationTest::testEmptyMiddlewareStack"/>
        <covered by="Tests\Integration\MiddlewareStackIntegrationTest::testFinalHandlerUsage"/>
      </line>
      <line nr="34">
        <covered by="Tests\Integration\MiddlewareStackIntegrationTest::testMiddlewareStackWithExceptionHandling"/>
        <covered by="Tests\Integration\MiddlewareStackIntegrationTest::testRateLimitingInMiddlewareStack"/>
        <covered by="Tests\Integration\MiddlewareStackIntegrationTest::testJsonBodyParsingInStack"/>
        <covered by="Tests\Integration\MiddlewareStackIntegrationTest::testInvalidJsonHandlingInStack"/>
        <covered by="Tests\Integration\MiddlewareStackIntegrationTest::testMiddlewareOrderMatters"/>
        <covered by="Tests\Integration\MiddlewareStackIntegrationTest::testEmptyMiddlewareStack"/>
        <covered by="Tests\Integration\MiddlewareStackIntegrationTest::testFinalHandlerUsage"/>
      </line>
      <line nr="35">
        <covered by="Tests\Integration\MiddlewareStackIntegrationTest::testMiddlewareStackWithExceptionHandling"/>
        <covered by="Tests\Integration\MiddlewareStackIntegrationTest::testRateLimitingInMiddlewareStack"/>
        <covered by="Tests\Integration\MiddlewareStackIntegrationTest::testJsonBodyParsingInStack"/>
        <covered by="Tests\Integration\MiddlewareStackIntegrationTest::testInvalidJsonHandlingInStack"/>
        <covered by="Tests\Integration\MiddlewareStackIntegrationTest::testMiddlewareOrderMatters"/>
      </line>
      <line nr="36">
        <covered by="Tests\Integration\MiddlewareStackIntegrationTest::testMiddlewareStackWithExceptionHandling"/>
        <covered by="Tests\Integration\MiddlewareStackIntegrationTest::testRateLimitingInMiddlewareStack"/>
        <covered by="Tests\Integration\MiddlewareStackIntegrationTest::testJsonBodyParsingInStack"/>
        <covered by="Tests\Integration\MiddlewareStackIntegrationTest::testInvalidJsonHandlingInStack"/>
        <covered by="Tests\Integration\MiddlewareStackIntegrationTest::testMiddlewareOrderMatters"/>
      </line>
      <line nr="38">
        <covered by="Tests\Integration\MiddlewareStackIntegrationTest::testMiddlewareStackWithExceptionHandling"/>
        <covered by="Tests\Integration\MiddlewareStackIntegrationTest::testRateLimitingInMiddlewareStack"/>
        <covered by="Tests\Integration\MiddlewareStackIntegrationTest::testJsonBodyParsingInStack"/>
        <covered by="Tests\Integration\MiddlewareStackIntegrationTest::testEmptyMiddlewareStack"/>
        <covered by="Tests\Integration\MiddlewareStackIntegrationTest::testFinalHandlerUsage"/>
      </line>
    </coverage>
    <source>
      <line no="1">
        <token name="T_OPEN_TAG">&lt;?php</token>
      </line>
      <line no="2"/>
      <line no="3">
        <token name="T_NAMESPACE">namespace</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">App\Http\Middleware</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="4"/>
      <line no="5">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Psr\Http\Server\RequestHandlerInterface</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="6">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Psr\Http\Server\MiddlewareInterface</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="7">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Psr\Http\Message\ServerRequestInterface</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="8">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Psr\Http\Message\ResponseInterface</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="9"/>
      <line no="10">
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="11">
        <token name="T_DOC_COMMENT"> * MiddlewareDispatcher</token>
      </line>
      <line no="12">
        <token name="T_DOC_COMMENT"> *</token>
      </line>
      <line no="13">
        <token name="T_DOC_COMMENT"> * Een lichtgewicht PSR-15 runner waarmee we een array van MiddlewareInterfaces</token>
      </line>
      <line no="14">
        <token name="T_DOC_COMMENT"> * kunnen doorlopen.  Door zelf een eenvoudige dispatcher te hebben zijn we</token>
      </line>
      <line no="15">
        <token name="T_DOC_COMMENT"> * niet afhankelijk van externe packages en houden we de codebase compact.</token>
      </line>
      <line no="16">
        <token name="T_DOC_COMMENT"> */</token>
      </line>
      <line no="17">
        <token name="T_CLASS">class</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">MiddlewareDispatcher</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IMPLEMENTS">implements</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">RequestHandlerInterface</token>
      </line>
      <line no="18">
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="19">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/** @var MiddlewareInterface[] */</token>
      </line>
      <line no="20">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$stack</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="21">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">RequestHandlerInterface</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$finalHandler</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="22">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">int</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$index</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">0</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="23">
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="24">
        <token name="T_DOC_COMMENT">     * @param MiddlewareInterface[] $stack</token>
      </line>
      <line no="25">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="26">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">__construct</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$stack</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">RequestHandlerInterface</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$finalHandler</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="27">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="28">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">stack</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">array_values</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$stack</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="29">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">finalHandler</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$finalHandler</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="30">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="31"/>
      <line no="32">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">handle</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">ServerRequestInterface</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ResponseInterface</token>
      </line>
      <line no="33">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="34">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_ISSET">isset</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">stack</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">index</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="35">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$middleware</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">stack</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">index</token>
        <token name="T_INC">++</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="36">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$middleware</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">process</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="37">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="38">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">finalHandler</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">handle</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="39">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="40">
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="41"/>
    </source>
  </file>
</phpunit>
