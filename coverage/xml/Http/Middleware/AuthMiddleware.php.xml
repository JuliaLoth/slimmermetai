<?xml version="1.0"?>
<phpunit xmlns="https://schema.phpunit.de/coverage/1.0">
  <file name="AuthMiddleware.php" path="\Http\Middleware">
    <totals>
      <lines total="102" comments="12" code="90" executable="39" executed="36" percent="92.31"/>
      <methods count="4" tested="3" percent="75.00"/>
      <functions count="0" tested="0" percent="0"/>
      <classes count="1" tested="0" percent="0.00"/>
      <traits count="0" tested="0" percent="0"/>
    </totals>
    <class name="App\Http\Middleware\AuthMiddleware" start="21" executable="39" executed="36" crap="12.07">
      <namespace name="App\Http\Middleware"/>
      <method name="__construct" signature="__construct(App\Infrastructure\Security\JwtService $jwtService, App\Infrastructure\Repository\AuthRepository $authRepository)" start="23" end="27" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="process" signature="process(Psr\Http\Message\ServerRequestInterface $request, Psr\Http\Server\RequestHandlerInterface $handler): Psr\Http\Message\ResponseInterface" start="29" end="64" crap="6" executable="16" executed="16" coverage="100"/>
      <method name="unauthorizedResponse" signature="unauthorizedResponse(string $message): Psr\Http\Message\ResponseInterface" start="66" end="84" crap="1" executable="15" executed="15" coverage="100"/>
      <method name="isExpiredToken" signature="isExpiredToken(string $token): bool" start="86" end="101" crap="5.26" executable="7" executed="4" coverage="57.142857142857"/>
    </class>
    <coverage>
      <line nr="27">
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testValidTokenPassesThrough"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testMissingAuthorizationHeaderReturnsUnauthorized"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testInvalidAuthorizationFormatReturnsUnauthorized"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testInvalidTokenReturnsUnauthorized"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testExpiredTokenReturnsUnauthorized"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testBlacklistedTokenReturnsUnauthorized"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testDifferentAuthorizationSchemes"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testCaseInsensitiveBearerScheme"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testTokenWithoutExpiration"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testResponseHeaders"/>
      </line>
      <line nr="31">
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testValidTokenPassesThrough"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testMissingAuthorizationHeaderReturnsUnauthorized"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testInvalidAuthorizationFormatReturnsUnauthorized"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testInvalidTokenReturnsUnauthorized"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testExpiredTokenReturnsUnauthorized"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testBlacklistedTokenReturnsUnauthorized"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testDifferentAuthorizationSchemes"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testCaseInsensitiveBearerScheme"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testTokenWithoutExpiration"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testResponseHeaders"/>
      </line>
      <line nr="34">
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testValidTokenPassesThrough"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testMissingAuthorizationHeaderReturnsUnauthorized"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testInvalidAuthorizationFormatReturnsUnauthorized"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testInvalidTokenReturnsUnauthorized"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testExpiredTokenReturnsUnauthorized"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testBlacklistedTokenReturnsUnauthorized"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testDifferentAuthorizationSchemes"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testCaseInsensitiveBearerScheme"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testTokenWithoutExpiration"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testResponseHeaders"/>
      </line>
      <line nr="35">
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testMissingAuthorizationHeaderReturnsUnauthorized"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testResponseHeaders"/>
      </line>
      <line nr="39">
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testValidTokenPassesThrough"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testInvalidAuthorizationFormatReturnsUnauthorized"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testInvalidTokenReturnsUnauthorized"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testExpiredTokenReturnsUnauthorized"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testBlacklistedTokenReturnsUnauthorized"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testDifferentAuthorizationSchemes"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testCaseInsensitiveBearerScheme"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testTokenWithoutExpiration"/>
      </line>
      <line nr="40">
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testInvalidAuthorizationFormatReturnsUnauthorized"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testDifferentAuthorizationSchemes"/>
      </line>
      <line nr="43">
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testValidTokenPassesThrough"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testInvalidTokenReturnsUnauthorized"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testExpiredTokenReturnsUnauthorized"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testBlacklistedTokenReturnsUnauthorized"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testCaseInsensitiveBearerScheme"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testTokenWithoutExpiration"/>
      </line>
      <line nr="46">
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testValidTokenPassesThrough"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testInvalidTokenReturnsUnauthorized"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testExpiredTokenReturnsUnauthorized"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testBlacklistedTokenReturnsUnauthorized"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testCaseInsensitiveBearerScheme"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testTokenWithoutExpiration"/>
      </line>
      <line nr="47">
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testValidTokenPassesThrough"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testInvalidTokenReturnsUnauthorized"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testExpiredTokenReturnsUnauthorized"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testBlacklistedTokenReturnsUnauthorized"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testCaseInsensitiveBearerScheme"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testTokenWithoutExpiration"/>
      </line>
      <line nr="48">
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testInvalidTokenReturnsUnauthorized"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testExpiredTokenReturnsUnauthorized"/>
      </line>
      <line nr="49">
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testExpiredTokenReturnsUnauthorized"/>
      </line>
      <line nr="51">
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testInvalidTokenReturnsUnauthorized"/>
      </line>
      <line nr="55">
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testValidTokenPassesThrough"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testBlacklistedTokenReturnsUnauthorized"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testCaseInsensitiveBearerScheme"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testTokenWithoutExpiration"/>
      </line>
      <line nr="56">
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testBlacklistedTokenReturnsUnauthorized"/>
      </line>
      <line nr="60">
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testValidTokenPassesThrough"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testCaseInsensitiveBearerScheme"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testTokenWithoutExpiration"/>
      </line>
      <line nr="61">
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testValidTokenPassesThrough"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testCaseInsensitiveBearerScheme"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testTokenWithoutExpiration"/>
      </line>
      <line nr="63">
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testValidTokenPassesThrough"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testCaseInsensitiveBearerScheme"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testTokenWithoutExpiration"/>
      </line>
      <line nr="68">
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testMissingAuthorizationHeaderReturnsUnauthorized"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testInvalidAuthorizationFormatReturnsUnauthorized"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testInvalidTokenReturnsUnauthorized"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testExpiredTokenReturnsUnauthorized"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testBlacklistedTokenReturnsUnauthorized"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testDifferentAuthorizationSchemes"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testResponseHeaders"/>
      </line>
      <line nr="69">
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testMissingAuthorizationHeaderReturnsUnauthorized"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testInvalidAuthorizationFormatReturnsUnauthorized"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testInvalidTokenReturnsUnauthorized"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testExpiredTokenReturnsUnauthorized"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testBlacklistedTokenReturnsUnauthorized"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testDifferentAuthorizationSchemes"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testResponseHeaders"/>
      </line>
      <line nr="70">
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testMissingAuthorizationHeaderReturnsUnauthorized"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testInvalidAuthorizationFormatReturnsUnauthorized"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testInvalidTokenReturnsUnauthorized"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testExpiredTokenReturnsUnauthorized"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testBlacklistedTokenReturnsUnauthorized"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testDifferentAuthorizationSchemes"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testResponseHeaders"/>
      </line>
      <line nr="71">
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testMissingAuthorizationHeaderReturnsUnauthorized"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testInvalidAuthorizationFormatReturnsUnauthorized"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testInvalidTokenReturnsUnauthorized"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testExpiredTokenReturnsUnauthorized"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testBlacklistedTokenReturnsUnauthorized"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testDifferentAuthorizationSchemes"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testResponseHeaders"/>
      </line>
      <line nr="74">
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testMissingAuthorizationHeaderReturnsUnauthorized"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testInvalidAuthorizationFormatReturnsUnauthorized"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testInvalidTokenReturnsUnauthorized"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testExpiredTokenReturnsUnauthorized"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testBlacklistedTokenReturnsUnauthorized"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testDifferentAuthorizationSchemes"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testResponseHeaders"/>
      </line>
      <line nr="75">
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testMissingAuthorizationHeaderReturnsUnauthorized"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testInvalidAuthorizationFormatReturnsUnauthorized"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testInvalidTokenReturnsUnauthorized"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testExpiredTokenReturnsUnauthorized"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testBlacklistedTokenReturnsUnauthorized"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testDifferentAuthorizationSchemes"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testResponseHeaders"/>
      </line>
      <line nr="77">
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testMissingAuthorizationHeaderReturnsUnauthorized"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testInvalidAuthorizationFormatReturnsUnauthorized"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testInvalidTokenReturnsUnauthorized"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testExpiredTokenReturnsUnauthorized"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testBlacklistedTokenReturnsUnauthorized"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testDifferentAuthorizationSchemes"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testResponseHeaders"/>
      </line>
      <line nr="90">
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testInvalidTokenReturnsUnauthorized"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testExpiredTokenReturnsUnauthorized"/>
      </line>
      <line nr="91">
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testInvalidTokenReturnsUnauthorized"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testExpiredTokenReturnsUnauthorized"/>
      </line>
      <line nr="95">
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testInvalidTokenReturnsUnauthorized"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testExpiredTokenReturnsUnauthorized"/>
      </line>
      <line nr="97">
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testInvalidTokenReturnsUnauthorized"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testExpiredTokenReturnsUnauthorized"/>
      </line>
      <line nr="72">
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testMissingAuthorizationHeaderReturnsUnauthorized"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testInvalidAuthorizationFormatReturnsUnauthorized"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testInvalidTokenReturnsUnauthorized"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testExpiredTokenReturnsUnauthorized"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testBlacklistedTokenReturnsUnauthorized"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testDifferentAuthorizationSchemes"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testResponseHeaders"/>
      </line>
      <line nr="76">
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testMissingAuthorizationHeaderReturnsUnauthorized"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testInvalidAuthorizationFormatReturnsUnauthorized"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testInvalidTokenReturnsUnauthorized"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testExpiredTokenReturnsUnauthorized"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testBlacklistedTokenReturnsUnauthorized"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testDifferentAuthorizationSchemes"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testResponseHeaders"/>
      </line>
      <line nr="78">
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testMissingAuthorizationHeaderReturnsUnauthorized"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testInvalidAuthorizationFormatReturnsUnauthorized"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testInvalidTokenReturnsUnauthorized"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testExpiredTokenReturnsUnauthorized"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testBlacklistedTokenReturnsUnauthorized"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testDifferentAuthorizationSchemes"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testResponseHeaders"/>
      </line>
      <line nr="79">
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testMissingAuthorizationHeaderReturnsUnauthorized"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testInvalidAuthorizationFormatReturnsUnauthorized"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testInvalidTokenReturnsUnauthorized"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testExpiredTokenReturnsUnauthorized"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testBlacklistedTokenReturnsUnauthorized"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testDifferentAuthorizationSchemes"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testResponseHeaders"/>
      </line>
      <line nr="80">
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testMissingAuthorizationHeaderReturnsUnauthorized"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testInvalidAuthorizationFormatReturnsUnauthorized"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testInvalidTokenReturnsUnauthorized"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testExpiredTokenReturnsUnauthorized"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testBlacklistedTokenReturnsUnauthorized"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testDifferentAuthorizationSchemes"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testResponseHeaders"/>
      </line>
      <line nr="81">
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testMissingAuthorizationHeaderReturnsUnauthorized"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testInvalidAuthorizationFormatReturnsUnauthorized"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testInvalidTokenReturnsUnauthorized"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testExpiredTokenReturnsUnauthorized"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testBlacklistedTokenReturnsUnauthorized"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testDifferentAuthorizationSchemes"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testResponseHeaders"/>
      </line>
      <line nr="82">
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testMissingAuthorizationHeaderReturnsUnauthorized"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testInvalidAuthorizationFormatReturnsUnauthorized"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testInvalidTokenReturnsUnauthorized"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testExpiredTokenReturnsUnauthorized"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testBlacklistedTokenReturnsUnauthorized"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testDifferentAuthorizationSchemes"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testResponseHeaders"/>
      </line>
      <line nr="83">
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testMissingAuthorizationHeaderReturnsUnauthorized"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testInvalidAuthorizationFormatReturnsUnauthorized"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testInvalidTokenReturnsUnauthorized"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testExpiredTokenReturnsUnauthorized"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testBlacklistedTokenReturnsUnauthorized"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testDifferentAuthorizationSchemes"/>
        <covered by="Tests\Unit\Middleware\AuthMiddlewareIntegrationTest::testResponseHeaders"/>
      </line>
    </coverage>
    <source>
      <line no="1">
        <token name="T_OPEN_TAG">&lt;?php</token>
      </line>
      <line no="2"/>
      <line no="3">
        <token name="T_DECLARE">declare</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">strict_types</token>
        <token name="T_EQUAL">=</token>
        <token name="T_LNUMBER">1</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="4"/>
      <line no="5">
        <token name="T_NAMESPACE">namespace</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">App\Http\Middleware</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="6"/>
      <line no="7">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">App\Infrastructure\Security\JwtService</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="8">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">App\Infrastructure\Repository\AuthRepository</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="9">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Psr\Http\Message\ServerRequestInterface</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="10">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Psr\Http\Message\ResponseInterface</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="11">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Psr\Http\Server\MiddlewareInterface</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="12">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Psr\Http\Server\RequestHandlerInterface</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="13">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">GuzzleHttp\Psr7\Response</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="14"/>
      <line no="15">
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="16">
        <token name="T_DOC_COMMENT"> * AuthMiddleware - JWT Authentication Middleware</token>
      </line>
      <line no="17">
        <token name="T_DOC_COMMENT"> * </token>
      </line>
      <line no="18">
        <token name="T_DOC_COMMENT"> * Validates JWT tokens and checks blacklist status.</token>
      </line>
      <line no="19">
        <token name="T_DOC_COMMENT"> * Designed for API endpoints that require authentication.</token>
      </line>
      <line no="20">
        <token name="T_DOC_COMMENT"> */</token>
      </line>
      <line no="21">
        <token name="T_CLASS">class</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">AuthMiddleware</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IMPLEMENTS">implements</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">MiddlewareInterface</token>
      </line>
      <line no="22">
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="23">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">__construct</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="24">
        <token name="T_WHITESPACE">        </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">JwtService</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$jwtService</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="25">
        <token name="T_WHITESPACE">        </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">AuthRepository</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$authRepository</token>
      </line>
      <line no="26">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="27">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="28"/>
      <line no="29">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">process</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">ServerRequestInterface</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">RequestHandlerInterface</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$handler</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ResponseInterface</token>
      </line>
      <line no="30">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="31">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$authHeader</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getHeaderLine</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Authorization'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="32">
        <token name="T_WHITESPACE">        </token>
      </line>
      <line no="33">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// Check for authorization header</token>
      </line>
      <line no="34">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EMPTY">empty</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$authHeader</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="35">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">unauthorizedResponse</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Authorization header is missing'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="36">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="37"/>
      <line no="38">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// Check Bearer format</token>
      </line>
      <line no="39">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_STRING">preg_match</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'/^Bearer\s+(.+)$/i'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$authHeader</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$matches</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="40">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">unauthorizedResponse</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Invalid authorization header format'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="41">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="42"/>
      <line no="43">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$token</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">trim</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$matches</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_LNUMBER">1</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="44"/>
      <line no="45">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// Verify JWT token</token>
      </line>
      <line no="46">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$payload</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">jwtService</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">verify</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$token</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="47">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_VARIABLE">$payload</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="48">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">isExpiredToken</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$token</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="49">
        <token name="T_WHITESPACE">                </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">unauthorizedResponse</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Token has expired'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="50">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="51">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">unauthorizedResponse</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Invalid token'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="52">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="53"/>
      <line no="54">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// Check if token is blacklisted</token>
      </line>
      <line no="55">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">authRepository</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">isTokenBlacklisted</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$token</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="56">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">unauthorizedResponse</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Token has been blacklisted'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="57">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="58"/>
      <line no="59">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// Add user payload to request attributes</token>
      </line>
      <line no="60">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">withAttribute</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'auth_payload'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$payload</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="61">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">withAttribute</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'auth_token'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$token</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="62"/>
      <line no="63">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$handler</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">handle</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="64">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="65"/>
      <line no="66">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">unauthorizedResponse</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$message</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ResponseInterface</token>
      </line>
      <line no="67">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="68">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$body</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">json_encode</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_OPEN_SQUARE">[</token>
      </line>
      <line no="69">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'success'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="70">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'message'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$message</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="71">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'error_code'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'UNAUTHORIZED'</token>
      </line>
      <line no="72">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="73"/>
      <line no="74">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Response</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="75">
        <token name="T_WHITESPACE">            </token>
        <token name="T_LNUMBER">401</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="76">
        <token name="T_WHITESPACE">            </token>
        <token name="T_OPEN_SQUARE">[</token>
      </line>
      <line no="77">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Content-Type'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'application/json; charset=UTF-8'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="78">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Access-Control-Allow-Origin'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'*'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="79">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Access-Control-Allow-Headers'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Authorization, Content-Type'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="80">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Access-Control-Allow-Methods'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'GET, POST, PUT, DELETE, OPTIONS'</token>
      </line>
      <line no="81">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="82">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$body</token>
      </line>
      <line no="83">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="84">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="85"/>
      <line no="86">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">isExpiredToken</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$token</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">bool</token>
      </line>
      <line no="87">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="88">
        <token name="T_WHITESPACE">        </token>
        <token name="T_TRY">try</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="89">
        <token name="T_WHITESPACE">            </token>
        <token name="T_COMMENT">// Try to decode without verification to check expiration</token>
      </line>
      <line no="90">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$parts</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">explode</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'.'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$token</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="91">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">count</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$parts</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_NOT_IDENTICAL">!==</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">3</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="92">
        <token name="T_WHITESPACE">                </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="93">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="94"/>
      <line no="95">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$payload</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">json_decode</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">base64_decode</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">str_replace</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'-'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'_'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'+'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'/'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$parts</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_LNUMBER">1</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">true</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="96">
        <token name="T_WHITESPACE">            </token>
      </line>
      <line no="97">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ISSET">isset</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$payload</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'exp'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$payload</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'exp'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LT">&lt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">time</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="98">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CATCH">catch</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_NAME_FULLY_QUALIFIED">\Exception</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$e</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="99">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="100">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="101">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="102">
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
      </line>
    </source>
  </file>
</phpunit>
