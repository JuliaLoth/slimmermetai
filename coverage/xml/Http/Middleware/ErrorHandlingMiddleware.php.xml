<?xml version="1.0"?>
<phpunit xmlns="https://schema.phpunit.de/coverage/1.0">
  <file name="ErrorHandlingMiddleware.php" path="\Http\Middleware">
    <totals>
      <lines total="64" comments="8" code="56" executable="23" executed="22" percent="95.65"/>
      <methods count="2" tested="1" percent="50.00"/>
      <functions count="0" tested="0" percent="0"/>
      <classes count="1" tested="0" percent="0.00"/>
      <traits count="0" tested="0" percent="0"/>
    </totals>
    <class name="App\Http\Middleware\ErrorHandlingMiddleware" start="21" executable="23" executed="22" crap="10">
      <namespace name="App\Http\Middleware"/>
      <method name="__construct" signature="__construct(App\Domain\Logging\ErrorLoggerInterface $logger, ?bool $displayErrors)" start="24" end="31" crap="2.15" executable="3" executed="2" coverage="66.666666666667"/>
      <method name="process" signature="process(Psr\Http\Message\ServerRequestInterface $request, Psr\Http\Server\RequestHandlerInterface $handler): Psr\Http\Message\ResponseInterface" start="33" end="62" crap="8" executable="20" executed="20" coverage="100"/>
    </class>
    <coverage>
      <line nr="26">
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testSuccessfulRequestPassesThrough"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testExceptionLogsError"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testJsonResponseForApiEndpoints"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testJsonResponseForAcceptHeader"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testJsonResponseForContentTypeHeader"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testHtmlResponseForWebEndpoints"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testDisplayErrorsShowsExceptionInJson"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testDisplayErrorsShowsExceptionInHtml"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testDifferentExceptionTypes"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testContentTypeDetectionWithMixedCase"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testApiPathDetection"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testErrorResponseStructure"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testHtmlErrorStructure"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testNestedExceptionHandling"/>
        <covered by="Tests\Integration\MiddlewareStackIntegrationTest::testMiddlewareStackWithExceptionHandling"/>
        <covered by="Tests\Integration\MiddlewareStackIntegrationTest::testInvalidJsonHandlingInStack"/>
        <covered by="Tests\Integration\MiddlewareStackIntegrationTest::testMiddlewareOrderMatters"/>
      </line>
      <line nr="29">
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testSuccessfulRequestPassesThrough"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testExceptionLogsError"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testJsonResponseForApiEndpoints"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testJsonResponseForAcceptHeader"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testJsonResponseForContentTypeHeader"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testHtmlResponseForWebEndpoints"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testDisplayErrorsShowsExceptionInJson"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testDisplayErrorsShowsExceptionInHtml"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testDifferentExceptionTypes"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testContentTypeDetectionWithMixedCase"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testApiPathDetection"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testErrorResponseStructure"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testHtmlErrorStructure"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testNestedExceptionHandling"/>
        <covered by="Tests\Integration\MiddlewareStackIntegrationTest::testMiddlewareStackWithExceptionHandling"/>
        <covered by="Tests\Integration\MiddlewareStackIntegrationTest::testInvalidJsonHandlingInStack"/>
        <covered by="Tests\Integration\MiddlewareStackIntegrationTest::testMiddlewareOrderMatters"/>
      </line>
      <line nr="36">
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testSuccessfulRequestPassesThrough"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testExceptionLogsError"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testJsonResponseForApiEndpoints"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testJsonResponseForAcceptHeader"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testJsonResponseForContentTypeHeader"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testHtmlResponseForWebEndpoints"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testDisplayErrorsShowsExceptionInJson"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testDisplayErrorsShowsExceptionInHtml"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testDifferentExceptionTypes"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testContentTypeDetectionWithMixedCase"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testApiPathDetection"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testErrorResponseStructure"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testHtmlErrorStructure"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testNestedExceptionHandling"/>
        <covered by="Tests\Integration\MiddlewareStackIntegrationTest::testMiddlewareStackWithExceptionHandling"/>
        <covered by="Tests\Integration\MiddlewareStackIntegrationTest::testInvalidJsonHandlingInStack"/>
        <covered by="Tests\Integration\MiddlewareStackIntegrationTest::testMiddlewareOrderMatters"/>
      </line>
      <line nr="37">
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testExceptionLogsError"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testJsonResponseForApiEndpoints"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testJsonResponseForAcceptHeader"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testJsonResponseForContentTypeHeader"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testHtmlResponseForWebEndpoints"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testDisplayErrorsShowsExceptionInJson"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testDisplayErrorsShowsExceptionInHtml"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testDifferentExceptionTypes"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testContentTypeDetectionWithMixedCase"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testApiPathDetection"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testErrorResponseStructure"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testHtmlErrorStructure"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testNestedExceptionHandling"/>
        <covered by="Tests\Integration\MiddlewareStackIntegrationTest::testMiddlewareStackWithExceptionHandling"/>
        <covered by="Tests\Integration\MiddlewareStackIntegrationTest::testMiddlewareOrderMatters"/>
      </line>
      <line nr="39">
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testExceptionLogsError"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testJsonResponseForApiEndpoints"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testJsonResponseForAcceptHeader"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testJsonResponseForContentTypeHeader"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testHtmlResponseForWebEndpoints"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testDisplayErrorsShowsExceptionInJson"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testDisplayErrorsShowsExceptionInHtml"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testDifferentExceptionTypes"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testContentTypeDetectionWithMixedCase"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testApiPathDetection"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testErrorResponseStructure"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testHtmlErrorStructure"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testNestedExceptionHandling"/>
        <covered by="Tests\Integration\MiddlewareStackIntegrationTest::testMiddlewareStackWithExceptionHandling"/>
        <covered by="Tests\Integration\MiddlewareStackIntegrationTest::testMiddlewareOrderMatters"/>
      </line>
      <line nr="40">
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testExceptionLogsError"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testJsonResponseForApiEndpoints"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testJsonResponseForAcceptHeader"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testJsonResponseForContentTypeHeader"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testHtmlResponseForWebEndpoints"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testDisplayErrorsShowsExceptionInJson"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testDisplayErrorsShowsExceptionInHtml"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testDifferentExceptionTypes"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testContentTypeDetectionWithMixedCase"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testApiPathDetection"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testErrorResponseStructure"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testHtmlErrorStructure"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testNestedExceptionHandling"/>
        <covered by="Tests\Integration\MiddlewareStackIntegrationTest::testMiddlewareStackWithExceptionHandling"/>
        <covered by="Tests\Integration\MiddlewareStackIntegrationTest::testMiddlewareOrderMatters"/>
      </line>
      <line nr="42">
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testExceptionLogsError"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testJsonResponseForApiEndpoints"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testJsonResponseForAcceptHeader"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testJsonResponseForContentTypeHeader"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testHtmlResponseForWebEndpoints"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testDisplayErrorsShowsExceptionInJson"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testDisplayErrorsShowsExceptionInHtml"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testDifferentExceptionTypes"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testContentTypeDetectionWithMixedCase"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testApiPathDetection"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testErrorResponseStructure"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testHtmlErrorStructure"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testNestedExceptionHandling"/>
        <covered by="Tests\Integration\MiddlewareStackIntegrationTest::testMiddlewareStackWithExceptionHandling"/>
        <covered by="Tests\Integration\MiddlewareStackIntegrationTest::testMiddlewareOrderMatters"/>
      </line>
      <line nr="43">
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testExceptionLogsError"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testJsonResponseForApiEndpoints"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testJsonResponseForAcceptHeader"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testJsonResponseForContentTypeHeader"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testHtmlResponseForWebEndpoints"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testDisplayErrorsShowsExceptionInJson"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testDisplayErrorsShowsExceptionInHtml"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testDifferentExceptionTypes"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testContentTypeDetectionWithMixedCase"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testApiPathDetection"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testErrorResponseStructure"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testHtmlErrorStructure"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testNestedExceptionHandling"/>
        <covered by="Tests\Integration\MiddlewareStackIntegrationTest::testMiddlewareStackWithExceptionHandling"/>
        <covered by="Tests\Integration\MiddlewareStackIntegrationTest::testMiddlewareOrderMatters"/>
      </line>
      <line nr="44">
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testExceptionLogsError"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testJsonResponseForApiEndpoints"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testJsonResponseForAcceptHeader"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testJsonResponseForContentTypeHeader"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testHtmlResponseForWebEndpoints"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testDisplayErrorsShowsExceptionInJson"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testDisplayErrorsShowsExceptionInHtml"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testDifferentExceptionTypes"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testContentTypeDetectionWithMixedCase"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testApiPathDetection"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testErrorResponseStructure"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testHtmlErrorStructure"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testNestedExceptionHandling"/>
        <covered by="Tests\Integration\MiddlewareStackIntegrationTest::testMiddlewareStackWithExceptionHandling"/>
        <covered by="Tests\Integration\MiddlewareStackIntegrationTest::testMiddlewareOrderMatters"/>
      </line>
      <line nr="45">
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testExceptionLogsError"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testJsonResponseForApiEndpoints"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testJsonResponseForAcceptHeader"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testJsonResponseForContentTypeHeader"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testHtmlResponseForWebEndpoints"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testDisplayErrorsShowsExceptionInJson"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testDisplayErrorsShowsExceptionInHtml"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testDifferentExceptionTypes"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testContentTypeDetectionWithMixedCase"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testApiPathDetection"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testErrorResponseStructure"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testHtmlErrorStructure"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testNestedExceptionHandling"/>
        <covered by="Tests\Integration\MiddlewareStackIntegrationTest::testMiddlewareStackWithExceptionHandling"/>
        <covered by="Tests\Integration\MiddlewareStackIntegrationTest::testMiddlewareOrderMatters"/>
      </line>
      <line nr="46">
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testExceptionLogsError"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testJsonResponseForApiEndpoints"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testJsonResponseForAcceptHeader"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testJsonResponseForContentTypeHeader"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testHtmlResponseForWebEndpoints"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testDisplayErrorsShowsExceptionInJson"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testDisplayErrorsShowsExceptionInHtml"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testDifferentExceptionTypes"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testContentTypeDetectionWithMixedCase"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testApiPathDetection"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testErrorResponseStructure"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testHtmlErrorStructure"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testNestedExceptionHandling"/>
        <covered by="Tests\Integration\MiddlewareStackIntegrationTest::testMiddlewareStackWithExceptionHandling"/>
        <covered by="Tests\Integration\MiddlewareStackIntegrationTest::testMiddlewareOrderMatters"/>
      </line>
      <line nr="47">
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testExceptionLogsError"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testJsonResponseForApiEndpoints"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testJsonResponseForAcceptHeader"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testJsonResponseForContentTypeHeader"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testHtmlResponseForWebEndpoints"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testDisplayErrorsShowsExceptionInJson"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testDisplayErrorsShowsExceptionInHtml"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testDifferentExceptionTypes"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testContentTypeDetectionWithMixedCase"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testApiPathDetection"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testErrorResponseStructure"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testHtmlErrorStructure"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testNestedExceptionHandling"/>
        <covered by="Tests\Integration\MiddlewareStackIntegrationTest::testMiddlewareStackWithExceptionHandling"/>
        <covered by="Tests\Integration\MiddlewareStackIntegrationTest::testMiddlewareOrderMatters"/>
      </line>
      <line nr="48">
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testExceptionLogsError"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testJsonResponseForApiEndpoints"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testJsonResponseForAcceptHeader"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testJsonResponseForContentTypeHeader"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testHtmlResponseForWebEndpoints"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testDisplayErrorsShowsExceptionInJson"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testDisplayErrorsShowsExceptionInHtml"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testDifferentExceptionTypes"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testContentTypeDetectionWithMixedCase"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testApiPathDetection"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testErrorResponseStructure"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testHtmlErrorStructure"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testNestedExceptionHandling"/>
        <covered by="Tests\Integration\MiddlewareStackIntegrationTest::testMiddlewareStackWithExceptionHandling"/>
        <covered by="Tests\Integration\MiddlewareStackIntegrationTest::testMiddlewareOrderMatters"/>
      </line>
      <line nr="49">
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testExceptionLogsError"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testJsonResponseForApiEndpoints"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testJsonResponseForAcceptHeader"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testJsonResponseForContentTypeHeader"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testDisplayErrorsShowsExceptionInJson"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testDifferentExceptionTypes"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testContentTypeDetectionWithMixedCase"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testApiPathDetection"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testErrorResponseStructure"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testNestedExceptionHandling"/>
        <covered by="Tests\Integration\MiddlewareStackIntegrationTest::testMiddlewareStackWithExceptionHandling"/>
        <covered by="Tests\Integration\MiddlewareStackIntegrationTest::testMiddlewareOrderMatters"/>
      </line>
      <line nr="50">
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testExceptionLogsError"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testJsonResponseForApiEndpoints"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testJsonResponseForAcceptHeader"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testJsonResponseForContentTypeHeader"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testDisplayErrorsShowsExceptionInJson"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testDifferentExceptionTypes"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testContentTypeDetectionWithMixedCase"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testApiPathDetection"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testErrorResponseStructure"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testNestedExceptionHandling"/>
        <covered by="Tests\Integration\MiddlewareStackIntegrationTest::testMiddlewareStackWithExceptionHandling"/>
        <covered by="Tests\Integration\MiddlewareStackIntegrationTest::testMiddlewareOrderMatters"/>
      </line>
      <line nr="51">
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testExceptionLogsError"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testJsonResponseForApiEndpoints"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testJsonResponseForAcceptHeader"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testJsonResponseForContentTypeHeader"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testDisplayErrorsShowsExceptionInJson"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testDifferentExceptionTypes"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testContentTypeDetectionWithMixedCase"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testApiPathDetection"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testErrorResponseStructure"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testNestedExceptionHandling"/>
        <covered by="Tests\Integration\MiddlewareStackIntegrationTest::testMiddlewareStackWithExceptionHandling"/>
        <covered by="Tests\Integration\MiddlewareStackIntegrationTest::testMiddlewareOrderMatters"/>
      </line>
      <line nr="54">
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testHtmlResponseForWebEndpoints"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testDisplayErrorsShowsExceptionInHtml"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testApiPathDetection"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testHtmlErrorStructure"/>
      </line>
      <line nr="55">
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testHtmlResponseForWebEndpoints"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testDisplayErrorsShowsExceptionInHtml"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testApiPathDetection"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testHtmlErrorStructure"/>
      </line>
      <line nr="56">
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testDisplayErrorsShowsExceptionInHtml"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testHtmlErrorStructure"/>
      </line>
      <line nr="60">
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testExceptionLogsError"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testJsonResponseForApiEndpoints"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testJsonResponseForAcceptHeader"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testJsonResponseForContentTypeHeader"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testHtmlResponseForWebEndpoints"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testDisplayErrorsShowsExceptionInJson"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testDisplayErrorsShowsExceptionInHtml"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testDifferentExceptionTypes"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testContentTypeDetectionWithMixedCase"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testApiPathDetection"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testErrorResponseStructure"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testHtmlErrorStructure"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testNestedExceptionHandling"/>
        <covered by="Tests\Integration\MiddlewareStackIntegrationTest::testMiddlewareStackWithExceptionHandling"/>
        <covered by="Tests\Integration\MiddlewareStackIntegrationTest::testMiddlewareOrderMatters"/>
      </line>
      <line nr="41">
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testExceptionLogsError"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testJsonResponseForApiEndpoints"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testJsonResponseForAcceptHeader"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testJsonResponseForContentTypeHeader"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testHtmlResponseForWebEndpoints"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testDisplayErrorsShowsExceptionInJson"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testDisplayErrorsShowsExceptionInHtml"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testDifferentExceptionTypes"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testContentTypeDetectionWithMixedCase"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testApiPathDetection"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testErrorResponseStructure"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testHtmlErrorStructure"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testNestedExceptionHandling"/>
        <covered by="Tests\Integration\MiddlewareStackIntegrationTest::testMiddlewareStackWithExceptionHandling"/>
        <covered by="Tests\Integration\MiddlewareStackIntegrationTest::testMiddlewareOrderMatters"/>
      </line>
      <line nr="52">
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testExceptionLogsError"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testJsonResponseForApiEndpoints"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testJsonResponseForAcceptHeader"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testJsonResponseForContentTypeHeader"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testDisplayErrorsShowsExceptionInJson"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testDifferentExceptionTypes"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testContentTypeDetectionWithMixedCase"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testApiPathDetection"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testErrorResponseStructure"/>
        <covered by="Tests\Integration\ErrorHandlingMiddlewareIntegrationTest::testNestedExceptionHandling"/>
        <covered by="Tests\Integration\MiddlewareStackIntegrationTest::testMiddlewareStackWithExceptionHandling"/>
        <covered by="Tests\Integration\MiddlewareStackIntegrationTest::testMiddlewareOrderMatters"/>
      </line>
    </coverage>
    <source>
      <line no="1">
        <token name="T_OPEN_TAG">&lt;?php</token>
      </line>
      <line no="2"/>
      <line no="3">
        <token name="T_NAMESPACE">namespace</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">App\Http\Middleware</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="4"/>
      <line no="5">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Psr\Http\Message\ServerRequestInterface</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="6">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Psr\Http\Message\ResponseInterface</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="7">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Psr\Http\Server\MiddlewareInterface</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="8">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Psr\Http\Server\RequestHandlerInterface</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="9">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">GuzzleHttp\Psr7\Response</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="10">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Throwable</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="11">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">App\Domain\Logging\ErrorLoggerInterface</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="12">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">App\Infrastructure\Config\Config</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="13"/>
      <line no="14">
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="15">
        <token name="T_DOC_COMMENT"> * ErrorHandlingMiddleware</token>
      </line>
      <line no="16">
        <token name="T_DOC_COMMENT"> *</token>
      </line>
      <line no="17">
        <token name="T_DOC_COMMENT"> * Vangt alle onopgevangen exceptions af uit de stack en zet deze om naar een</token>
      </line>
      <line no="18">
        <token name="T_DOC_COMMENT"> * gestandaardiseerde PSR-7 Response.  Hiermee centraliseren we error handling</token>
      </line>
      <line no="19">
        <token name="T_DOC_COMMENT"> * en kunnen we op &#xE9;&#xE9;n plek bepalen of we fouten als JSON of HTML teruggeven.</token>
      </line>
      <line no="20">
        <token name="T_DOC_COMMENT"> */</token>
      </line>
      <line no="21">
        <token name="T_CLASS">class</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ErrorHandlingMiddleware</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IMPLEMENTS">implements</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">MiddlewareInterface</token>
      </line>
      <line no="22">
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="23">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">bool</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$displayErrors</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="24">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">__construct</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ErrorLoggerInterface</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$logger</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_STRING">bool</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$displayErrors</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="25">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="26">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$displayErrors</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="27">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">displayErrors</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Config</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">getInstance</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">get</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'display_errors'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="28">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ELSE">else</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="29">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">displayErrors</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$displayErrors</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="30">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="31">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="32"/>
      <line no="33">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">process</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">ServerRequestInterface</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">RequestHandlerInterface</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$handler</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ResponseInterface</token>
      </line>
      <line no="34">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="35">
        <token name="T_WHITESPACE">        </token>
        <token name="T_TRY">try</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="36">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$handler</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">handle</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="37">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CATCH">catch</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">Throwable</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$e</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="38">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// Log via domein-logger</token>
      </line>
      <line no="39">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">logger</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">logError</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Unhandled exception'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
      </line>
      <line no="40">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'exception'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$e</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="41">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="42">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$accept</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">strtolower</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getHeaderLine</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Accept'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="43">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$contentType</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">strtolower</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getHeaderLine</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Content-Type'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="44">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$path</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getUri</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getPath</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="45">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$wantsJson</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">str_contains</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$accept</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'application/json'</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="46">
        <token name="T_WHITESPACE">                </token>
        <token name="T_BOOLEAN_OR">||</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">str_contains</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$contentType</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'application/json'</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="47">
        <token name="T_WHITESPACE">                </token>
        <token name="T_BOOLEAN_OR">||</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">str_starts_with</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$path</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'/api'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="48">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$wantsJson</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="49">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$payload</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">json_encode</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_OPEN_SQUARE">[</token>
      </line>
      <line no="50">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'error'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">true</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="51">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'message'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">displayErrors</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$e</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getMessage</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Internal Server Error'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="52">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="53">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ELSE">else</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="54">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$payload</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'&lt;h1&gt;500 &#x2013; Internal Server Error&lt;/h1&gt;'</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="55">
        <token name="T_WHITESPACE">                </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">displayErrors</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="56">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_VARIABLE">$payload</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONCAT_EQUAL">.=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'&lt;pre&gt;'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">htmlspecialchars</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$e</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getMessage</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"\n"</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$e</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getTraceAsString</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'&lt;/pre&gt;'</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="57">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="58">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="59"/>
      <line no="60">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Response</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_LNUMBER">500</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Content-Type'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$wantsJson</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'application/json'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'text/html'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$payload</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="61">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="62">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="63">
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="64"/>
    </source>
  </file>
</phpunit>
